<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    ">

	<!-- <context:annotation-config />
	<context:component-scan base-package="com.eScooter" />
	<task:annotation-driven />  
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver">
		</property>
		<property name="jdbcUrl"
			value="jdbc:mysql://192.168.50.121:3306/eScooter?useUnicode=true&amp;characterEncoding=utf8"></property>
		<property name="user" value="root" />
		<property name="password" value="kotei$88" />
		192.168.4.63/220.249.88.170:8081服务器配置
		value="jdbc:mysql://192.168.4.91:3306/smbcloud?useUnicode=true&amp;characterEncoding=utf8"></property>

		120.27.144.235/120.27.144.235:8080服务器配置
		value="jdbc:mysql://120.27.144.235:3306/smbcloud?useUnicode=true&amp;characterEncoding=utf8"></property>
		<property name="minPoolSize" value="10" />
		<property name="maxPoolSize" value="100" />
		<property name="maxIdleTime" value="1800" />
		<property name="acquireIncrement" value="3" />
		<property name="maxStatements" value="1000" />
		<property name="initialPoolSize" value="10" />
		<property name="idleConnectionTestPeriod" value="60" />
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="false" />
		<property name="testConnectionOnCheckout" value="false" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		依赖注入数据源，注入正是上文定义的dataSource
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>

		<property name="hibernateProperties">
			<props>
				指定Hibernate的连接方言
				<prop key="hibernate.dialect">com.eScooter.common.utils.FixedMySQL5InnoDBDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
		mappingResouces属性用来列出全部映射文件
		<property name="mappingResources"> <list> 以下用来列出所有的PO映射文件 <value>com/kotei/smbcloud/persistence/entity/APPUser.hbm.xml</value> 
			</list> </property>
		<property name="packagesToScan">
			<list>
				<value>com.eScooter.persistence.entity</value>
			</list>
		</property>
	</bean>

	配置事务管理器
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	配置声明式事务：方法一，在Service实现类或者public实现方法上使用注解@Transactional，则此类或方法就会启用事务机制
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="messageproperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:message.properties" />
	</bean> -->
	<bean id="helloworld" class="com.test.HelloWorld" autowire="byName">
		<property name="msg">
			<value>helloaaaa</value>
		</property>
		<!-- <property name="date">
			<ref bean="date"/>
		</property> -->
		<property name="list">
			<list>
				<value>adaa</value>
				<value>adada</value>
				<value>sfaadaad</value>
			</list>
		</property>
	</bean>
	<bean id="date" class="java.util.Date"></bean>
	<bean id="name" class="com.test.Student">
		<property name="name">
			<value>dfdsf</value>
		</property>
	</bean>
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename">
			<value>message</value>
		</property>
	</bean>
	
	<bean id="listener" class="com.test.action.LogListener"></bean>
	
	<bean id="logAround" class="com.test.action.LogAround"></bean>
	<bean id="logBefore" class="com.test.action.LogBefore"></bean>
	<bean id="logBook" class="com.test.action.LogBook"></bean>
	
	<bean id="logBeforeAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref bean="logBefore"/>
		</property>
		<property name="patterns">
			<value>.*doSomething.*</value>
		</property>
	</bean>
	<bean id="logProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>com.test.service.LogBookService</value>
		</property>
		<property name="target">
			<ref bean="logBook"/>
		</property>
		<property name="interceptorNames">
			<list>
				<value>logAround</value>
				<value>logBeforeAdvisor</value>
			</list>
		</property>
	</bean>
</beans>


